- Details:
  title: '<b>Details</b>'
- license:
  title: License
  bazel: '[![License: Apache 2.0](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)'
  buck: '[![License: Apache 2.0](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)'
  conan: '[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)'
  gradle: '[![License: Apache 2.0](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)'
  make: '[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)'
  scons: '[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)'
- url:
  title: 'Home Page'
  bazel: '[:house:](https://bazel.build/)'
  buck: '[:house:](https://buckbuild.com)'
  conan: '[:house:](https://conan.io/)'
  gradle: '[:house:](https://gradle.org)'
  make: '[:house:](https://www.gnu.org/software/make/)'
  scons: '[:house:](http://scons.org/)'
- code:
  title: 'Source Code'
  bazel: '[:eyeglasses:](https://github.com/bazelbuild/bazel)'
  buck: '[:eyeglasses:](https://github.com/facebook/buck)'
  conan: '[:eyeglasses:](https://github.com/conan-io/conan)'
  gradle: '[:eyeglasses:](https://github.com/gradle/gradle)'
  make: '[:eyeglasses:](https://git.savannah.gnu.org/cgit/make.git/)'
  scons: '[:eyeglasses:](https://github.com/SConsProject/scons)'
- example:
  title: 'Example / Demo'
  bazel: '[:space_invader:](https://github.com/praqma/native-example-bazel/)'
  buck: '[:space_invader:](https://github.com/praqma/native-example-buck/)'
  conan: '[:space_invader:](https://github.com/praqma/native-example-conan/)'
  gradle: '[:space_invader:](https://github.com/praqma/native-example-gradle/)'
  make: '[:space_invader:](https://github.com/praqma/native-example-make/)'
  scons: '[:space_invader:](https://github.com/praqma/native-example-scons/)'

- performance:
  title: '<b>Performance</b>'
- performance_incremental_builds:
  title: 'Incremental Builds'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://blog.gradle.org/introducing-incremental-build-support)'
  make:
  scons:
- performance_task_output_caching:
  title: 'Task Output Caching'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/build_cache.html#sec:task_output_caching)'
  make:
  scons:
- performance_incremental_tasks:
  title: 'Incremental Tasks'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/custom_tasks.html#incremental_tasks)'
  make:
  scons:
- performance_compiler_daemon:
  title: 'Compiler Daemon'
  bazel: '[:white_check_mark:](javascript:void(0);)'
  buck: '[:white_check_mark:](javascript:void(0);)'
  conan: '[:question:](javascript:void(0);)'
  gradle: '[:white_check_mark:](https://gradle.org/features/#performance)'
  make: '[:x:](javascript:void(0);)'
  scons: '[:question:](javascript:void(0);)'
- performance_parallel_execution:
  title: 'Parallel Execution'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/custom_tasks.html#worker_api)'
  make:
  scons:
- performance_parallel_download_of_dependencies:
  title: 'Parallel Download of Dependencies'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://gradle.org/features/#performance)'
  make:
  scons:

- build_scans:
  title: '<b>Build Scans</b>'
- caching:
  title: 'Caching'
  bazel: '[:white_check_mark:](https://bazel.build/)'
  buck: '[:white_check_mark:](https://buckbuild.com/concept/what_makes_buck_so_fast.html)'
  conan: '[:white_check_mark:](https://www.conan.io/)'
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/build_cache.html)'
  make: '[:question:](javascript:void(0);)'
  scons: '[:white_check_mark:](http://scons.org/)'
- build_scans_web_based_build_visuallization:
  title: 'Web-based Build Visualization'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://gradle.org/features/#build-scans)'
  make:
  scons:
- build_scans_collaborative_debugging:
  title: 'Collaborative Debugging'
  bazel:
  buck:
  conan:
  gradle: '[:eight_spoked_asterisk:](https://docs.gradle.com/enterprise/get-started/#understand_your_dependencies)'
  make:
  scons:
- build_scans_compare_builds:
  title: 'Compare Builds'
  bazel:
  buck:
  conan:
  gradle: '[:eight_spoked_asterisk:](https://docs.gradle.com/enterprise/get-started/#compare_build_scans_to_find_differences)'
  make:
  scons:
- build_scans_extend_and_customize:
  title: 'Extend and Customize'
  bazel: '[:white_check_mark:](https://bazel.build/)'
  buck:
  conan:
  gradle: '[:white_check_mark:](https://blog.gradle.org/custom-data-in-build-scans)'
  make:
  scons:
- build_scans_track_and_export_history_across_all_builds:
  title: 'Track and Export History Across all Builds'
  bazel:
  buck:
  conan:
  gradle: '[:eight_spoked_asterisk:](https://docs.gradle.com/enterprise/)'
  make:
  scons:

- command_line_interface:
  title: '<b>Command Line Interface</b>'
- command_line_visualize_dependency_graph:
  title: 'Visualize Dependency Graph'
  bazel: '[:white_check_mark:](https://blog.bazel.build/2015/06/17/visualize-your-build.html)'
  buck: '[:white_check_mark:](https://buckbuild.com/command/query.html)'
  conan: '[:white_check_mark:](http://conanio.readthedocs.io/en/latest/reference/commands/info.html)'
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/userguide_single.html#sec:listing_dependencies)'
  make: '[:question:](javascript:void(0);)'
  scons: '[:question:](https://bitbucket.org/scons/scons/wiki/VisualizeDependencies)'
- command_line_interface_task_exclusion:
  title: 'Task Exclusion'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line)'
  make:
  scons:
- command_line_interface_continuous_build:
  title: 'Continuous Build'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/continuous_build.html)'
  make:
  scons:
- command_line_interface_composite_builds:
  title: 'Composite Builds'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/composite_builds.html#defining_composite_builds)'
  make:
  scons:
- command_line_interface_dry_run:
  title: 'Dry Run'
  bazel: '[:x:](https://docs.bazel.build/versions/master/command-line-reference.html)'
  buck: '[:x:](https://buckbuild.com/command/test.html)'
  conan: '[:construction:](https://github.com/conan-io/conan/issues/1432)'
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/userguide_single.html#sec:dry_run)'
  make: '[:white_check_mark:](https://www.gnu.org/software/make/manual/html_node/Instead-of-Execution.html)'
  scons: '[:white_check_mark:](http://scons.org/doc/production/HTML/scons-man.html)'
- command_line_interface_continue_execution_after_failures:
  title: 'Continue Execution After Failures'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/tutorial_gradle_command_line.html#sec:continue_build_on_failure)'
  make:
  scons:
- command_line_interface_sync_dependency_cache_with_repository:
  title: 'Sync Dependency Cache with Repository'
  bazel:
  buck:
  conan:
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/dependency_management.html#sub:cache_refresh)'
  make:
  scons:

- artifacts_management:
  title: '<b>Artifacts Management</b>'
- artifactory_support:
  title: 'Artifactory Support'
  bazel: '[:construction:](https://github.com/bazelbuild/bazel/issues/1372)'
  buck: '[:x:](https://buckbuild.com/command/publish.html)'
  conan: '[:white_check_mark:](https://www.conan.io/)'
  gradle: '[:white_check_mark:](https://www.jfrog.com/blog/speed-up-your-gradle-builds-with-jfrog-artifactory/)'
  make: '[:x:](javascript:void(0);)'
  scons: '[:x:](javascript:void(0);)'
- maven_support:
  title: 'Maven Support'
  bazel: '[:construction:](https://github.com/bazelbuild/bazel/issues/1372)'
  buck: '[:white_check_mark:](https://buckbuild.com/command/publish.html)'
  conan: '[:white_check_mark:](https://github.com/conan-io/conan/issues/1112)'
  gradle: '[:white_check_mark:](https://docs.gradle.org/current/userguide/publishing_maven.html)'
  make: '[:x:](javascript:void(0);)'
  scons: '[:x:](javascript:void(0);)'
